`define BSV_NO_INITIAL_BLOCKS
`define BSV_POSITIVE_RESET
//
// Generated by Bluespec Compiler, version 2022.01-38-g3606bc14 (build 3606bc14)
//
//
// Ports:
// Name                         I/O  size props
// state_out                      O   384
// RDY_state_out                  O     1 const
// RDY_state_in                   O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// state_in_i                     I   384
// state_in_rc                    I    10
// EN_state_in                    I     1 unused
// EN_state_out                   I     1 unused
//
// Combinational paths from inputs to outputs:
//   (state_in_i, state_in_rc, EN_state_in) -> state_out
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
//   `define BSV_ASSIGNMENT_DELAY
`endif
  `ifndef BSV_POSITIVE_RESET
  `define BSV_POSITIVE_RESET
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPerm(
	  CLK,
	  RST_N,
	  EN_state_out,
	  state_out,
	  RDY_state_out,

	  state_in_i,
	  state_in_rc,
	  EN_state_in,
	  RDY_state_in);
      input  CLK;
      input  RST_N;

  // actionvalue method state_out
  input  EN_state_out;
  output [383 : 0] state_out;
  output RDY_state_out;

  // action method state_in
  input  [383 : 0] state_in_i;
  input  [9 : 0] state_in_rc;
  input  EN_state_in;
  output RDY_state_in;

  // signals for module outputs
  wire [383 : 0] state_out;
  wire RDY_state_in, RDY_state_out;

  // remaining internal signals
  wire [95 : 0] state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d32,
		state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5,
		state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d59,
		state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44,
		state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72,
		state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33,
		state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74;
  wire [31 : 0] state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d54,
		state_in_i_BITS_159_TO_128_1_XOR_state_in_i_BI_ETC___d55,
		state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d95,
		state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77,
		state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d97,
		state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24,
		state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d81,
		state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d89;
  wire [9 : 0] spliced_bits__h120156;

  // actionvalue method state_out
  assign state_out =
	     { state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[23:0],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[31:24],
	       state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d97[23:0],
	       state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d97[31:24],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[87:64],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[95:88],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[55:32],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74[63:56],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[94:64],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[95],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[62:32],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[63],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[30:0],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72[31],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d95[30:0],
	       state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d95[31],
	       state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d59,
	       state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d89 } ;
  assign RDY_state_out = 1'b1 ;

  // action method state_in
  assign RDY_state_in = 1'b1 ;

  // remaining internal signals
  assign spliced_bits__h120156 =
	     state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d81[9:0] ^
	     state_in_rc ;
  assign state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d32 =
	     { { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[58:32],
		 state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[63:59] } ^
	       { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[49:32],
		 state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[63:50] },
	       { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[26:0],
		 state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[31:27] } ^
	       { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[17:0],
		 state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[31:18] },
	       { state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24[26:0],
		 state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24[31:27] } ^
	       { state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24[17:0],
		 state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24[31:18] } } ;
  assign state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5 =
	     state_in_i[127:32] ^ state_in_i[255:160] ^ state_in_i[383:288] ;
  assign state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d54 =
	     { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[90:64],
	       state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[95:91] } ^
	     { state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[81:64],
	       state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d5[95:82] } ;
  assign state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d59 =
	     state_in_i[127:32] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d32 ^
	     { ~state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44[63:0] &
	       { state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[84:64],
		 state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[95:85],
		 state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[52:32],
		 state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[63:53] },
	       ~state_in_i_BITS_159_TO_128_1_XOR_state_in_i_BI_ETC___d55 &
	       { state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[20:0],
		 state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[31:21] } } ;
  assign state_in_i_BITS_159_TO_128_1_XOR_state_in_i_BI_ETC___d55 =
	     state_in_i[159:128] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d54 ;
  assign state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44 =
	     state_in_i[255:160] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d32 ;
  assign state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72 =
	     { state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44[63:0],
	       state_in_i_BITS_159_TO_128_1_XOR_state_in_i_BI_ETC___d55 } ^
	     { ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[84:64],
	       ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[95:85],
	       ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[52:32],
	       ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[63:53],
	       ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[20:0],
	       ~state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[31:21] } &
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d59 ;
  assign state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d95 =
	     state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44[95:64] ^
	     { ~state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[20:0],
	       ~state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[31:21] } &
	     state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d89 ;
  assign state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77 =
	     state_in_i[287:256] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d54 ;
  assign state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d97 =
	     { state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[20:0],
	       state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[31:21] } ^
	     ~state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d89 &
	     state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d95 ;
  assign state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d24 =
	     state_in_i[31:0] ^ state_in_i[159:128] ^ state_in_i[287:256] ;
  assign state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d81 =
	     state_in_i[31:0] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d54 ;
  assign state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d89 =
	     { state_in_i_BITS_31_TO_0_0_XOR_state_in_i_BITS__ETC___d81[31:10],
	       spliced_bits__h120156 } ^
	     ~state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d44[95:64] &
	     { state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[20:0],
	       state_in_i_BITS_287_TO_256_3_XOR_state_in_i_BI_ETC___d77[31:21] } ;
  assign state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33 =
	     state_in_i[383:288] ^
	     state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d32 ;
  assign state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d74 =
	     { state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[84:64],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[95:85],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[52:32],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[63:53],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[20:0],
	       state_in_i_BITS_383_TO_288_XOR_state_in_i_BITS_ETC___d33[31:21] } ^
	     ~state_in_i_BITS_127_TO_32_XOR_state_in_i_BITS__ETC___d59 &
	     state_in_i_BITS_255_TO_160_XOR_state_in_i_BITS_ETC___d72 ;
endmodule  // mkPerm

